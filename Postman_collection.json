{
	"info": {
		"_postman_id": "YOUR_COLLECTION_ID_HERE",
		"name": "Management Backend API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "YOUR_EXPORTER_ID_HERE",
		"description": "ThisPostman collection provides a complete and organized set of API endpoints for the backend built with Express.js, MongoDB, and JWT authentication. It is an essential tool for developers to test and interact with the server's functionalities.\n\n### Key Features of the Backend:\n\n- **JWT Authentication**: Securely manage user sessions with endpoints for `signup`, `login`, and `logout` using JSON Web Tokens.\n- **Role-Based Access Control**: Verify permissions for different user roles—Manager, Team Lead, and Executive—and test role-specific endpoints.\n- **Comprehensive Data Management**: The collection includes full CRUD (Create, Read, Update, Delete) functionality for core models like `Users`, `Teams`, `Projects`, and `Reviews`, allowing for a thorough test of data persistence and manipulation.\n- **Dashboard & Reporting**: Test dedicated endpoints for fetching dashboard statistics for managers, as well as dynamic team reports that aggregate project data for individual team members.\n- **Security Measures**: The backend is hardened with various security features, including password hashing with `bcryptjs`, rate limiting to prevent abuse, and data sanitization to protect against common web vulnerabilities.\n\n### Getting Started:\n\n1.  Import this collection into Postman.\n2.  Set up your environment variables for `jwt_token`, `user_id`, `team_id`, and others. The `login`, `create user`, and `create team` requests are configured with pre-request scripts to automatically capture and set these variables for a seamless testing workflow.\n3.  Follow the structured folders to test endpoints in a logical sequence, starting with Authentication and moving to protected resources."
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "User Signup",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test User\",\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\",\n    \"passwordConfirm\": \"password123\",\n    \"role\": \"executive\",\n    \"refId\": \"executive\"\n}"
						},
						"url": {
							"raw": "http://localhost:8000/api/auth/signup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"auth",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"jwt_token\", jsonData.token);",
									"pm.environment.set(\"user_id\", jsonData.data.user._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "http://localhost:8000/api/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Logout",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/api/auth/logout",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"auth",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users (Protected)",
			"item": [
				{
					"name": "Get Current User (Me)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "http://localhost:8000/api/users/me",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"users",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Current User",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Test User\",\n    \"email\": \"updated_test@example.com\"\n}"
						},
						"url": {
							"raw": "http://localhost:8000/api/users/updateMe",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"users",
								"updateMe"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Current User",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "http://localhost:8000/api/users/deleteMe",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"users",
								"deleteMe"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users (Manager Only)",
			"description": "These endpoints require a user with 'manager' role to be authenticated.",
			"item": [
				{
					"name": "Get All Users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "http://localhost:8000/api/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create New User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New Team Lead\",\n    \"email\": \"teamlead@example.com\",\n    \"password\": \"password123\",\n    \"passwordConfirm\": \"password123\",\n    \"role\": \"team_lead\",\n    \"refId\": \"teamlead\"\n}"
						},
						"url": {
							"raw": "http://localhost:8000/api/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User By ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "http://localhost:8000/api/users/{{user_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User By ID",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Name\",\n    \"role\": \"executive\"\n}"
						},
						"url": {
							"raw": "http://localhost:8000/api/users/{{user_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User By ID",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "http://localhost:8000/api/users/{{user_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Teams (Protected)",
			"item": [
				{
					"name": "Get All Teams",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "http://localhost:8000/api/teams",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"teams"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Team (Manager Only)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"team_id\", jsonData.data.team._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Development Team\",\n    \"description\": \"Team responsible for backend development.\",\n    \"teamLeads\": [],\n    \"executives\": []\n}"
						},
						"url": {
							"raw": "http://localhost:8000/api/teams",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"teams"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Team By ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "http://localhost:8000/api/teams/{{team_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"teams",
								"{{team_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Team By ID",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"Updated description for Development Team\"\n}"
						},
						"url": {
							"raw": "http://localhost:8000/api/teams/{{team_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"teams",
								"{{team_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Team Member",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"{{user_id}}\",\n    \"role\": \"executive\"\n}"
						},
						"url": {
							"raw": "http://localhost:8000/api/teams/{{team_id}}/add-member",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"teams",
								"{{team_id}}",
								"add-member"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Team By ID",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "http://localhost:8000/api/teams/{{team_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"teams",
								"{{team_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Dashboard (Manager & Team Lead)",
			"item": [
				{
					"name": "Get Dashboard Stats",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "http://localhost:8000/api/dashboard/stats",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"dashboard",
								"stats"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Projects (Manager & Team Lead)",
			"item": [
				{
					"name": "Create Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"project_id\", jsonData.data.project._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"companyName\": \"New Project Co.\",\n    \"invoiceNumber\": \"INV-12345\",\n    \"clientName\": \"Jane Doe\",\n    \"startDate\": \"2025-08-01T00:00:00.000Z\",\n    \"serviceName\": \"Video Editing\",\n    \"projectValue\": 1500,\n    \"status\": \"Pending\"\n}"
						},
						"url": {
							"raw": "http://localhost:8000/api/projects",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Projects",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "http://localhost:8000/api/projects",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Project by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "http://localhost:8000/api/projects/{{project_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"projects",
								"{{project_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Project by ID",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"Completed\",\n    \"endDate\": \"2025-08-05T00:00:00.000Z\"\n}"
						},
						"url": {
							"raw": "http://localhost:8000/api/projects/{{project_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"projects",
								"{{project_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign Task to User in Project",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"assignedTo\": \"{{user_id}}\",\n    \"task\": {\"service\": \"Design Logo\", \"status\": \"Pending\"}\n}"
						},
						"url": {
							"raw": "http://localhost:8000/api/projects/{{project_id}}/assign-task",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"projects",
								"{{project_id}}",
								"assign-task"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Project Payouts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "http://localhost:8000/api/projects/payout",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"projects",
								"payout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Project by ID (Manager only)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "http://localhost:8000/api/projects/{{project_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"projects",
								"{{project_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Executive Endpoints",
			"description": "These endpoints are restricted to users with the 'executive' role. They provide access to an executive's personal projects and financial data.",
			"item": [
				{
					"name": "Get My Projects (Current & Pending)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "http://localhost:8000/api/executive/my-projects",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"executive",
								"my-projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get My Completed Projects",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "http://localhost:8000/api/executive/completed-projects",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"executive",
								"completed-projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get My Payout",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "http://localhost:8000/api/executive/my-payout",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"executive",
								"my-payout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Reviews (Manager Only)",
			"description": "These endpoints require an authenticated user with the 'manager' role. They are used for managing client feedback and reviews.",
			"item": [
				{
					"name": "Create Review",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"clientName\": \"John Smith\",\n    \"contactNo\": \"123-456-7890\",\n    \"startDate\": \"2025-07-01T00:00:00.000Z\",\n    \"serviceName\": \"Graphic Design\",\n    \"designation\": \"CEO\",\n    \"emailId\": \"john.smith@example.com\",\n    \"endDate\": \"2025-07-31T00:00:00.000Z\"\n}"
						},
						"url": {
							"raw": "http://localhost:8000/api/reviews",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"reviews"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Reviews",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "http://localhost:8000/api/reviews",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"reviews"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Review by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "http://localhost:8000/api/reviews/{{review_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"reviews",
								"{{review_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Review by ID",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"clientName\": \"John Smith Updated\",\n    \"contactNo\": \"987-654-3210\"\n}"
						},
						"url": {
							"raw": "http://localhost:8000/api/reviews/{{review_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"reviews",
								"{{review_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Review by ID",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "http://localhost:8000/api/reviews/{{review_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"reviews",
								"{{review_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Reports (Manager Only)",
			"description": "These endpoints are protected and restricted to the 'manager' role.",
			"item": [
				{
					"name": "Get Team Report",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "http://localhost:8000/api/reports/team-report",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"reports",
								"team-report"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Projects for a Team Member",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "http://localhost:8000/api/reports/team-report/projects/{{user_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"reports",
								"team-report",
								"projects",
								"{{user_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Salary API (Manager Only)",
			"description": "Endpoints for managing salary records, restricted to the 'manager' role.",
			"item": [
				{
					"name": "Get All Salaries",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "http://localhost:8000/api/salaries",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"salaries"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Salary Payment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"amount\": 50000,\n    \"month\": \"August\",\n    \"year\": 2025\n}"
						},
						"url": {
							"raw": "http://localhost:8000/api/salaries/{{user_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"salaries",
								"{{user_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Received Data API (Manager Only)",
			"description": "Endpoints for managing received client data, restricted to the 'manager' role.",
			"item": [
				{
					"name": "Create Received Data",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"companyName\": \"New Client Co.\",\n    \"invoiceNumber\": \"INV-54321\",\n    \"clientName\": \"John Doe\",\n    \"startDate\": \"2025-08-01T00:00:00.000Z\",\n    \"serviceName\": \"Website Development\"\n}"
						},
						"url": {
							"raw": "http://localhost:8000/api/received-data",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"received-data"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Received Data",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "http://localhost:8000/api/received-data",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"received-data"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Received Data by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "http://localhost:8000/api/received-data/{{received_data_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"received-data",
								"{{received_data_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Received Data by ID",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"clientName\": \"John Doe Updated\"\n}"
						},
						"url": {
							"raw": "http://localhost:8000/api/received-data/{{received_data_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"received-data",
								"{{received_data_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Received Data by ID",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "http://localhost:8000/api/received-data/{{received_data_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"received-data",
								"{{received_data_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Team Lead Reviews API (Protected)",
			"description": "Endpoints for Team Leads to manage reviews. This API is restricted to users with the 'team_lead' role. It allows fetching reviews, potentially with filters.",
			"item": [
				{
					"name": "Get Team Lead Reviews",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "http://localhost:8000/api/tl/reviews",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"tl",
								"reviews"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "jwt_token",
			"value": "",
			"type": "string",
			"description": "Stores the JWT token for authenticated requests"
		},
		{
			"key": "user_id",
			"value": "",
			"type": "string",
			"description": "Stores the ID of the logged-in/created user"
		},
		{
			"key": "team_id",
			"value": "",
			"type": "string",
			"description": "Stores the ID of a created team"
		},
		{
			"key": "project_id",
			"value": "",
			"type": "string",
			"description": "Stores the ID of a created project"
		},
		{
			"key": "review_id",
			"value": "",
			"type": "string",
			"description": "Stores the ID of a created review"
		},
		{
			"key": "received_data_id",
			"value": "",
			"type": "string",
			"description": "Stores the ID of a received data entry"
		}
	]
}